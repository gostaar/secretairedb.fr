{% for devi in devis %}
{% set total = 0 %}
<div class="modal fade" id="devisDetailsModal{{devi.id}}" tabindex="-1" role="dialog" aria-labelledby="devisDetailsModalLabel{{devi.id}}" aria-hidden="true">
  <div class="modal-dialog modal-lg" role="document" id='devisId' data-devis={{devi.id}}>
    <div class="modal-content" id="modalContentDevis{{devi.id}}">
      <div class="modal-header">
        <h5 class="modal-title w-100 d-flex justify-content-between" id="devisDetailsModalLabel{{devi.id}}">
          <span>Détails du devis n° {{ devi.id }}<label id="devisId" class="border-0 bg-transparent text-black"></label></span>
      </div>
      <div class="modal-body m-3 p-0">

        <!-- Tableau des articles du devis -->
        <table class="table table-bordered" style="width: 100%; table-layout: fixed;" id='devisContentTable{{devi.id}}'>
            <thead>
                <tr>
                    <th class="text-start border-1" style="background-color: #f0f0f0; width: 45%;">Désignation</th>
                    <th class="text-center border-1" style="background-color: #f0f0f0; width: 10%;">Qté</th>
                    <th class="text-center border-1" style="background-color: #f0f0f0; width: 17%;">PU</th>
                    <th class="text-center border-1" style="background-color: #f0f0f0; width: 28%;">HTVA</th>
                </tr>
            </thead> 
            <tbody>
            {% for ligne in devi.lignes %}
            {% if ligne.devis.id == devi.id %}
            {% set total = total + (ligne.prixUnitaire * ligne.quantite) %}
                  <tr>
                    <td class="text-start" style='font-size: 14px;'>{{ligne.designation}}</td>
                    <td class="text-end" style='font-size: 14px;'>{{ligne.quantite}}</td>
                    <td class="text-end" style='font-size: 14px;'>{{ligne.prixUnitaire | format_currency('EUR')}}</td>
                    <td class="text-end" style='font-size: 14px;'>{{(ligne.prixUnitaire * ligne.quantite) | format_currency('EUR')}}</td>
                  </tr>
            {% endif %}
            {% endfor %}
            </tbody>
        </table>
        <div class="text-end me-3">
          <strong>Total : {{ total | format_currency('EUR') }}</strong>
        </div>
       <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-dismiss="modal">Fermer</button>
          <button type="button" class="btn btn-primary" id="btnPdfDevis">PDF</button>
          <button type="button" class="btn btn-primary" id="btnPrintDevis">Impression</button>
      </div>
    </div>
  </div>
</div>
{% endfor %}
<script>
document.addEventListener("DOMContentLoaded", function () {
    const factureId = document.getElementById('devisId').getAttribute('data-devis');
    const isMobile = window.innerWidth <= 768;

    function handleDevisClick(e) {
            if (e.target.id === 'btnPdfDevis') {
            generatePdf(devisId);
            window.appState.endLoadingState = true;
        }

        if (e.target.id === 'btnPrintDevis') {
            previewAndPrintPdf(devisId); 
        }
    }

    if (isMobile) {
        document.addEventListener('pointerdown', handleDevisClick);
    } else {
        document.addEventListener('click', handleDevisClick);
    }
})

// Génération du fichier PDF
function generatePdf(devisId) {
    const content = document.getElementById('devishtml2print');
    content.classList.remove('d-none');
    content.classList.add('d-flex');

    const options = {
        margin: 1,
        filename: `Devis_${devisId}.pdf`,
        image: { type: 'jpeg', quality: 0.98 },
        html2canvas: { scale: 1 }, 
        jsPDF: { unit: 'cm', format: 'a4', orientation: 'portrait' }
    };

    html2pdf().set(options).from(content).toPdf().get('pdf')
    .then((pdf) => {
        const pageCount = pdf.internal.getNumberOfPages();
        const pageWidth = pdf.internal.pageSize.getWidth();
        const pageHeight = pdf.internal.pageSize.getHeight();

        pdf.setFontSize(12);
        for (let i = 1; i <= pageCount; i++) {
            pdf.setPage(i);
            pdf.text(`Page ${i} de ${pageCount}`, pageWidth / 2, pageHeight - 1, { align: 'center' });
        }

        pdf.save(`Devis_${devisId}.pdf`);

    }).catch((error) => {
        console.error("Erreur lors de la génération du PDF :", error); 
    }).finally(() => {
        content.classList.add('d-none');
        content.classList.remove('d-flex');
    });
}


function previewAndPrintPdf(devisId) {
    const content = document.getElementById('devishtml2print');
    content.classList.remove('d-none');
    content.classList.add('d-flex');

    const options = {
        margin: 1,
        filename: `Devis_${devisId}.pdf`,
        image: { type: 'jpeg', quality: 0.98 },
        html2canvas: { scale: 1 },
        jsPDF: { unit: 'cm', format: 'a4', orientation: 'portrait' }
    };

    html2pdf()
        .set(options)
        .from(content)
        .toPdf()
        .get('pdf')
        .then((pdf) => {
            const pageCount = pdf.internal.getNumberOfPages();
            const pageWidth = pdf.internal.pageSize.getWidth();
            const pageHeight = pdf.internal.pageSize.getHeight();

            pdf.setFontSize(12);
            for (let i = 1; i <= pageCount; i++) {
                pdf.setPage(i);
                pdf.text(`Page ${i} de ${pageCount}`, pageWidth / 2, pageHeight - 1, { align: 'center' });
            }

            const pdfBlob = pdf.output('blob');
            const pdfUrl = URL.createObjectURL(pdfBlob);
            const previewWindow = window.open('', '_blank');

            if (previewWindow) {
                previewWindow.document.write(`
                    <html>
                        <head><title>Aperçu PDF</title></head>
                        <body>
                            <embed width="100%" height="100%" src="${pdfUrl}" type="application/pdf">
                        </body>
                    </html>
                `);
                previewWindow.document.close();

                previewWindow.onload = () => previewWindow.print();
            }
        })
        .finally(() => {
            content.classList.add('d-none');
            content.classList.remove('d-flex');
        });
}
</script>