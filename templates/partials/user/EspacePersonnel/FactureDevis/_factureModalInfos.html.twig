{% for facture in factures %}
{% set total = 0 %}
<div class="modal fade" id="factureDetailsModal{{ facture.id }}" tabindex="-1" role="dialog" aria-labelledby="factureDetailsModalLabel{{ facture.id }}" aria-hidden="true">
  <div class="modal-dialog modal-lg" role="facture" id='factureId' data-facture={{facture.id}}>
    <div class="modal-content" id="modalContentFacture{{ facture.id }}">
      <div class="modal-header">
        <h5 class="modal-title w-100 d-flex justify-content-between" id="factureDetailsModalLabel{{ facture.id }}">
          <span>Détails de la facture n° {{ facture.id }}</span>
        </h5>
      </div>
      <div class="modal-body m-3 p-0">
        <!-- Tableau des articles de la facture -->
        <table class="table table-bordered" style="width: 100%; table-layout: fixed;" id="factureContentTable{{ facture.id }}">
          <thead>
            <tr>
              <th class="text-start border-1" style="background-color: #f0f0f0; width: 45%;">Désignation</th>
              <th class="text-center border-1" style="background-color: #f0f0f0; width: 10%;">Qté</th>
              <th class="text-center border-1" style="background-color: #f0f0f0; width: 17%;">PU</th>
              <th class="text-center border-1" style="background-color: #f0f0f0; width: 28%;">HTVA</th>
            </tr>
          </thead>
          <tbody>
       
            {% for ligne in facture.lignes %}
            {% if ligne.facture.id == facture.id %}
            {% set total = total + (ligne.prixUnitaire * ligne.quantite) %}
            <tr>
              <td class="text-start" style="font-size: 14px;">{{ ligne.designation }}</td>
              <td class="text-end" style="font-size: 14px;">{{ ligne.quantite }}</td>
              <td class="text-end" style="font-size: 14px;">{{ ligne.prixUnitaire | format_currency('EUR') }}</td>
              <td class="text-end" style="font-size: 14px;">{{ (ligne.prixUnitaire * ligne.quantite) | format_currency('EUR') }}</td>
            </tr>
            {% endif %}
            {% endfor %}
          </tbody>
        </table>
        <div class="text-end me-3">
          <strong>Total : {{ total | format_currency('EUR') }}</strong>
        </div>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-dismiss="modal">Fermer</button>
        <button type="button" class="btn btn-primary" id="btnPdfFacture">PDF</button>
        <button type="button" class="btn btn-primary" id="btnPrintFacture">Impression</button>
      </div>
    </div>
  </div>
</div>

{% endfor %}

<script>
document.addEventListener("DOMContentLoaded", function () {
    const factureId = document.getElementById('factureId').getAttribute('data-facture');
    const isMobile = window.innerWidth <= 768;
    // Fonction qui gère les clics et les interactions tactiles
    function handleFactureClick(e) {

        if (e.target.id === 'btnPdfFacture') {
            generatePdf(factureId);
            window.appState.endLoadingState = true;
        }

        if (e.target.id === 'btnPrintFacture') {
            previewAndPrintPdf(factureId); 
        }
    }

    if (isMobile) {
        document.addEventListener('pointerdown', handleFactureClick);
    } else {
        document.addEventListener('click', handleFactureClick);
    }
})

// Génération du fichier PDF
function generatePdf(factureId) {
    const content = document.getElementById('facturehtml2print');
    content.classList.remove('d-none');
    content.classList.add('d-flex');

    const options = {
        margin: 1,
        filename: `Facture_${factureId}.pdf`,
        image: { type: 'jpeg', quality: 0.98 },
        html2canvas: { scale: 1 }, 
        jsPDF: { unit: 'cm', format: 'a4', orientation: 'portrait' }
    };

    html2pdf().set(options).from(content).toPdf().get('pdf')
    .then((pdf) => {
        const pageCount = pdf.internal.getNumberOfPages();
        const pageWidth = pdf.internal.pageSize.getWidth();
        const pageHeight = pdf.internal.pageSize.getHeight();

        pdf.setFontSize(12);
        for (let i = 1; i <= pageCount; i++) {
            pdf.setPage(i);
            pdf.text(`Page ${i} de ${pageCount}`, pageWidth / 2, pageHeight - 1, { align: 'center' });
        }

        pdf.save(`Facture_${factureId}.pdf`);

    }).catch((error) => {
        console.error("Erreur lors de la génération du PDF :", error); 
    }).finally(() => {
        content.classList.add('d-none');
        content.classList.remove('d-flex');
    });
}


function previewAndPrintPdf(factureId) {
    const content = document.getElementById('facturehtml2print');
    content.classList.remove('d-none');
    content.classList.add('d-flex');

    const options = {
        margin: 1,
        filename: `Facture_${factureId}.pdf`,
        image: { type: 'jpeg', quality: 0.98 },
        html2canvas: { scale: 1 },
        jsPDF: { unit: 'cm', format: 'a4', orientation: 'portrait' }
    };

    html2pdf()
        .set(options)
        .from(content)
        .toPdf()
        .get('pdf')
        .then((pdf) => {
            const pageCount = pdf.internal.getNumberOfPages();
            const pageWidth = pdf.internal.pageSize.getWidth();
            const pageHeight = pdf.internal.pageSize.getHeight();

            pdf.setFontSize(12);
            for (let i = 1; i <= pageCount; i++) {
                pdf.setPage(i);
                pdf.text(`Page ${i} de ${pageCount}`, pageWidth / 2, pageHeight - 1, { align: 'center' });
            }

            const pdfBlob = pdf.output('blob');
            const pdfUrl = URL.createObjectURL(pdfBlob);
            const previewWindow = window.open('', '_blank');

            if (previewWindow) {
                previewWindow.document.write(`
                    <html>
                        <head><title>Aperçu PDF</title></head>
                        <body>
                            <embed width="100%" height="100%" src="${pdfUrl}" type="application/pdf">
                        </body>
                    </html>
                `);
                previewWindow.document.close();

                previewWindow.onload = () => previewWindow.print();
            }
        })
        .finally(() => {
            content.classList.add('d-none');
            content.classList.remove('d-flex');
        });
}
</script>
